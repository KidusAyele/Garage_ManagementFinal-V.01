@model Garage_ManagementFinal.Entry_Form

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <hr />
    <div class="form-horizontal">
        <div style="width:100%; display:table">
            <div style="display:table-row">
                <div style="width:50%;display:table-cell">

              
                    
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)


                    <div class="form-group">
                        @Html.LabelFor(model => model.region, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.DropDownListFor(model => model.region, new SelectList(Enum.GetValues(typeof(region))), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.region, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.code, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.DropDownListFor(model => model.code, new SelectList(Enum.GetValues(typeof(code))), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Alpha, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.DropDownListFor(model => model.Alpha, new SelectList(Enum.GetValues(typeof(Alpa))), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Alpha, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.plate_no, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.plate_no, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.plate_no, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div style="width:50%;display:table-cell">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Owner_name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Owner_name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Owner_name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.TextAreaFor(model => model.Description, new { rows = 4, cols = 55, style = "max-width: 500px; max-height: 200px;" })

                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.HiddenFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            <div class="checkbox">
                                @Html.HiddenFor(model => model.Status)
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = DateTime.Now.ToString() } })
                            @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <hr />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-outline-success" />
                    @Html.ActionLink("Back", "unrepairedCar", new { @style = "float: right;" }, new { @class = "btn btn-outline-info", @style = "float: right;"  })
                </div>
            </div>
        </div>
    </div>
}



